// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewVideoCreated extends ethereum.Event {
  get params(): NewVideoCreated__Params {
    return new NewVideoCreated__Params(this);
  }
}

export class NewVideoCreated__Params {
  _event: NewVideoCreated;

  constructor(event: NewVideoCreated) {
    this._event = event;
  }

  get videocontentId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get maxWatchCapacity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get creatorAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get videocontentDataCID(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class NewWatchParty extends ethereum.Event {
  get params(): NewWatchParty__Params {
    return new NewWatchParty__Params(this);
  }
}

export class NewWatchParty__Params {
  _event: NewWatchParty;

  constructor(event: NewWatchParty) {
    this._event = event;
  }

  get videoID(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get attendeeAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Muta__identityToVideoContentResult {
  value0: Bytes;
  value1: string;
  value2: Address;
  value3: BigInt;

  constructor(value0: Bytes, value1: string, value2: Address, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getVideocontentId(): Bytes {
    return this.value0;
  }

  getVideocontentCID(): string {
    return this.value1;
  }

  getVideoOwner(): Address {
    return this.value2;
  }

  getMaxWatchCapacity(): BigInt {
    return this.value3;
  }
}

export class Muta extends ethereum.SmartContract {
  static bind(address: Address): Muta {
    return new Muta("Muta", address);
  }

  identityToVideoContent(param0: Bytes): Muta__identityToVideoContentResult {
    let result = super.call(
      "identityToVideoContent",
      "identityToVideoContent(bytes32):(bytes32,string,address,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new Muta__identityToVideoContentResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toAddress(),
      result[3].toBigInt()
    );
  }

  try_identityToVideoContent(
    param0: Bytes
  ): ethereum.CallResult<Muta__identityToVideoContentResult> {
    let result = super.tryCall(
      "identityToVideoContent",
      "identityToVideoContent(bytes32):(bytes32,string,address,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Muta__identityToVideoContentResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toAddress(),
        value[3].toBigInt()
      )
    );
  }
}

export class JoinWatchPartyCall extends ethereum.Call {
  get inputs(): JoinWatchPartyCall__Inputs {
    return new JoinWatchPartyCall__Inputs(this);
  }

  get outputs(): JoinWatchPartyCall__Outputs {
    return new JoinWatchPartyCall__Outputs(this);
  }
}

export class JoinWatchPartyCall__Inputs {
  _call: JoinWatchPartyCall;

  constructor(call: JoinWatchPartyCall) {
    this._call = call;
  }

  get eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class JoinWatchPartyCall__Outputs {
  _call: JoinWatchPartyCall;

  constructor(call: JoinWatchPartyCall) {
    this._call = call;
  }
}

export class CreateVideoNewContentCall extends ethereum.Call {
  get inputs(): CreateVideoNewContentCall__Inputs {
    return new CreateVideoNewContentCall__Inputs(this);
  }

  get outputs(): CreateVideoNewContentCall__Outputs {
    return new CreateVideoNewContentCall__Outputs(this);
  }
}

export class CreateVideoNewContentCall__Inputs {
  _call: CreateVideoNewContentCall;

  constructor(call: CreateVideoNewContentCall) {
    this._call = call;
  }

  get videocontentDataCID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get maxWatchCapacity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateVideoNewContentCall__Outputs {
  _call: CreateVideoNewContentCall;

  constructor(call: CreateVideoNewContentCall) {
    this._call = call;
  }
}
